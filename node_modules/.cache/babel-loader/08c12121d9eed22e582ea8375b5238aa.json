{"ast":null,"code":"var _jsxFileName = \"/Users/niizakitakuma/Downloads/react-highcharts-resas-demo-main/src/components/Main.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import CheckField from \"./CheckField\";\n// import Graph from \"./Graph\";\n// import axios from \"axios\";\n\n// const Styles: { [key: string]: React.CSSProperties } = {\n//   graph: {\n//     padding: \"10px\",\n//   },\n//   label: {\n//     fontSize: \"20px\",\n//     padding: \"0.5rem 2rem\",\n//     borderLeft: \"4px solid #000\",\n//     marginLeft: \"10pt\",\n//   },\n// };\n\n// const Main: React.FC = () => {\n//   const [prefectures, setPreFectures] = useState<{\n//     message: null;\n//     result: {\n//       prefCode: number;\n//       prefName: string;\n//     }[];\n//   } | null>(null);\n//   const [prefPopulation, setPrefPopulation] = useState<\n//     { prefName: string; data: { year: number; value: number }[] }[]\n//   >([]);\n\n//   useEffect(() => {\n//     // 都道府県一覧を取得する\n//     axios\n//       .get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n//         headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY },\n//       })\n\n//       .then((results) => {\n//         setPreFectures(results.data);\n//         console.log(results.data);\n//       })\n//       .catch((error) => {})\n//   }, []);\n\n//   // チェックボックスをクリックした際の処理\n//   const handleClickCheck = (\n//     prefName: string,\n//     prefCode: number,\n//     check: boolean\n//   ) => {\n//     let c_prefPopulation = prefPopulation.slice();\n\n//     // チェックをつけた処理\n//     if (check) {\n//       if (\n//         c_prefPopulation.findIndex((value) => value.prefName === prefName) !==\n//         -1\n//       )\n//         return;\n\n//       axios\n//         .get(\n//           \"https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=\" +\n//             String(prefCode),\n//           {\n//             headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY},\n//           }\n//         )\n//         .then((results) => {\n//           c_prefPopulation.push({\n//             prefName: prefName,\n//             data: results.data.result.data[0].data,\n//           });\n\n//           setPrefPopulation(c_prefPopulation);\n//         })\n//         .catch((error) => {\n//           return;\n//         });\n//     }\n//     // チェックを外した処理\n//     else {\n//       const deleteIndex = c_prefPopulation.findIndex(\n//         (value) => value.prefName === prefName\n//       );\n//       if (deleteIndex === -1) return;\n//       c_prefPopulation.splice(deleteIndex, 1);\n//       setPrefPopulation(c_prefPopulation);\n//     }\n//   };\n\n//   return (\n//     <main>\n//       <h2 style={Styles.label}>都道府県</h2>\n//       {prefectures && (\n//         <CheckField\n//           prefectures={prefectures.result}\n//           onChange={handleClickCheck}\n//         />\n//       )}\n//       <h2 style={Styles.label}>人口推移グラフ</h2>\n//       <Graph populationdata={prefPopulation} />\n//     </main>\n//   );\n// };\n\n// export default Main;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import Chart from \"./Chart\";\n// import CheckField from \"./CheckField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [prefectures, setPrefectures] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n      headers: {\n        \"X-API-KEY\": process.env.REACT_APP_API_KEY\n      }\n    }).then(results => {\n      setPrefectures(results.data);\n      console.log(results.data);\n    }).catch(error => {});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"ht03YkM8Go0kizDqvLQI5mxUeKc=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","axios","Main","prefectures","setPrefectures","get","headers","process","env","REACT_APP_API_KEY","then","results","data","console","log","catch","error"],"sources":["/Users/niizakitakuma/Downloads/react-highcharts-resas-demo-main/src/components/Main.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import CheckField from \"./CheckField\";\n// import Graph from \"./Graph\";\n// import axios from \"axios\";\n\n// const Styles: { [key: string]: React.CSSProperties } = {\n//   graph: {\n//     padding: \"10px\",\n//   },\n//   label: {\n//     fontSize: \"20px\",\n//     padding: \"0.5rem 2rem\",\n//     borderLeft: \"4px solid #000\",\n//     marginLeft: \"10pt\",\n//   },\n// };\n\n// const Main: React.FC = () => {\n//   const [prefectures, setPreFectures] = useState<{\n//     message: null;\n//     result: {\n//       prefCode: number;\n//       prefName: string;\n//     }[];\n//   } | null>(null);\n//   const [prefPopulation, setPrefPopulation] = useState<\n//     { prefName: string; data: { year: number; value: number }[] }[]\n//   >([]);\n\n \n//   useEffect(() => {\n//     // 都道府県一覧を取得する\n//     axios\n//       .get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n//         headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY },\n//       })\n      \n//       .then((results) => {\n//         setPreFectures(results.data);\n//         console.log(results.data);\n//       })\n//       .catch((error) => {})\n//   }, []);\n\n//   // チェックボックスをクリックした際の処理\n//   const handleClickCheck = (\n//     prefName: string,\n//     prefCode: number,\n//     check: boolean\n//   ) => {\n//     let c_prefPopulation = prefPopulation.slice();\n\n//     // チェックをつけた処理\n//     if (check) {\n//       if (\n//         c_prefPopulation.findIndex((value) => value.prefName === prefName) !==\n//         -1\n//       )\n//         return;\n\n//       axios\n//         .get(\n//           \"https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=\" +\n//             String(prefCode),\n//           {\n//             headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY},\n//           }\n//         )\n//         .then((results) => {\n//           c_prefPopulation.push({\n//             prefName: prefName,\n//             data: results.data.result.data[0].data,\n//           });\n\n//           setPrefPopulation(c_prefPopulation);\n//         })\n//         .catch((error) => {\n//           return;\n//         });\n//     }\n//     // チェックを外した処理\n//     else {\n//       const deleteIndex = c_prefPopulation.findIndex(\n//         (value) => value.prefName === prefName\n//       );\n//       if (deleteIndex === -1) return;\n//       c_prefPopulation.splice(deleteIndex, 1);\n//       setPrefPopulation(c_prefPopulation);\n//     }\n//   };\n\n//   return (\n//     <main>\n//       <h2 style={Styles.label}>都道府県</h2>\n//       {prefectures && (\n//         <CheckField\n//           prefectures={prefectures.result}\n//           onChange={handleClickCheck}\n//         />\n//       )}\n//       <h2 style={Styles.label}>人口推移グラフ</h2>\n//       <Graph populationdata={prefPopulation} />\n//     </main>\n//   );\n// };\n\n// export default Main;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import Chart from \"./Chart\";\n// import CheckField from \"./CheckField\";\n\nconst Main = () => {\n  const [prefectures, setPrefectures] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n        headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY },\n      })\n      .then((results) => {\n        setPrefectures(results.data);\n        console.log(results.data); \n      })\n      .catch((error) => {});\n  }, []);\n\n  return (\n    <div>\n      {/* <h2>都道府県</h2>\n      {\n      prefectures.map((prefecture) => <li>{ prefecture }</li>)\n      }\n      <h2>人口推移グラフ</h2> */}\n    </div>\n  );\n};"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdE,KAAK,CACFI,GAAG,CAAC,wDAAwD,EAAE;MAC7DC,OAAO,EAAE;QAAE,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC;MAAkB;IACxD,CAAC,CAAC,CACDC,IAAI,CAAEC,OAAO,IAAK;MACjBP,cAAc,CAACO,OAAO,CAACC,IAAI,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA;IAAA;IAAA;EAAA,QAMM;AAEV,CAAC;AAAC,GAxBId,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}