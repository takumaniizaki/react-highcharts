{"ast":null,"code":"var _jsxFileName = \"/Users/niizakitakuma/Downloads/react-highcharts-resas-demo-main/src/components/Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CheckField from \"./CheckField\";\nimport Graph from \"./Graph\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = {\n  graph: {\n    padding: \"10px\"\n  },\n  label: {\n    fontSize: \"20px\",\n    padding: \"0.5rem 2rem\",\n    borderLeft: \"4px solid #000\",\n    marginLeft: \"10pt\"\n  }\n};\nconst Main = () => {\n  _s();\n  const [prefectures, setPreFectures] = useState(null);\n  const [prefPopulation, setPrefPopulation] = useState([]);\n  console.log(process.env.REACT_APP_API_KEY);\n  useEffect(() => {\n    // 都道府県一覧を取得する\n    axios.get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n      headers: {\n        \"X-API-KEY\": process.env.REACT_APP_API_KEY\n      }\n    }).then(results => {\n      setPreFectures(results.data);\n      console.log(results.data);\n    }).catch(error => {});\n  }, []);\n\n  // チェックボックスをクリックした際の処理\n  const handleClickCheck = (prefName, prefCode, check) => {\n    let c_prefPopulation = prefPopulation.slice();\n\n    // チェックをつけた処理\n    if (check) {\n      if (c_prefPopulation.findIndex(value => value.prefName === prefName) !== -1) return;\n      axios.get(\"https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=\" + String(prefCode), {\n        headers: {\n          \"X-API-KEY\": process.env.REACT_APP_API_KEY\n        }\n      }).then(results => {\n        c_prefPopulation.push({\n          prefName: prefName,\n          data: results.data.result.data[0].data\n        });\n        setPrefPopulation(c_prefPopulation);\n      }).catch(error => {\n        return;\n      });\n    }\n    // チェックを外した処理\n    else {\n      const deleteIndex = c_prefPopulation.findIndex(value => value.prefName === prefName);\n      if (deleteIndex === -1) return;\n      c_prefPopulation.splice(deleteIndex, 1);\n      setPrefPopulation(c_prefPopulation);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: Styles.label,\n      children: \"\\u90FD\\u9053\\u5E9C\\u770C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), prefectures && /*#__PURE__*/_jsxDEV(CheckField, {\n      prefectures: prefectures.result,\n      onChange: handleClickCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: Styles.label,\n      children: \"\\u4EBA\\u53E3\\u63A8\\u79FB\\u30B0\\u30E9\\u30D5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      populationdata: prefPopulation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"/E0EYH+wJRLcLtbHZPizVgqqe0k=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","CheckField","Graph","axios","Styles","graph","padding","label","fontSize","borderLeft","marginLeft","Main","prefectures","setPreFectures","prefPopulation","setPrefPopulation","console","log","process","env","REACT_APP_API_KEY","get","headers","then","results","data","catch","error","handleClickCheck","prefName","prefCode","check","c_prefPopulation","slice","findIndex","value","String","push","result","deleteIndex","splice"],"sources":["/Users/niizakitakuma/Downloads/react-highcharts-resas-demo-main/src/components/Main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CheckField from \"./CheckField\";\nimport Graph from \"./Graph\";\n\nimport axios from \"axios\";\n\nconst Styles: { [key: string]: React.CSSProperties } = {\n  graph: {\n    padding: \"10px\",\n  },\n  label: {\n    fontSize: \"20px\",\n    padding: \"0.5rem 2rem\",\n    borderLeft: \"4px solid #000\",\n    marginLeft: \"10pt\",\n  },\n};\n\nconst Main: React.FC = () => {\n  const [prefectures, setPreFectures] = useState<{\n    message: null;\n    result: {\n      prefCode: number;\n      prefName: string;\n    }[];\n  } | null>(null);\n  const [prefPopulation, setPrefPopulation] = useState<\n    { prefName: string; data: { year: number; value: number }[] }[]\n  >([]);\n  console.log(process.env.REACT_APP_API_KEY);\n  useEffect(() => {\n    // 都道府県一覧を取得する\n    axios\n      .get(\"https://opendata.resas-portal.go.jp/api/v1/prefectures\", {\n        headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY }\n      })\n      \n      .then((results) => {\n        setPreFectures(results.data);\n        console.log(results.data);\n      })\n      .catch((error) => {});\n  }, []);\n\n  // チェックボックスをクリックした際の処理\n  const handleClickCheck = (\n    prefName: string,\n    prefCode: number,\n    check: boolean\n  ) => {\n    let c_prefPopulation = prefPopulation.slice();\n\n    // チェックをつけた処理\n    if (check) {\n      if (\n        c_prefPopulation.findIndex((value) => value.prefName === prefName) !==\n        -1\n      )\n        return;\n\n      axios\n        .get(\n          \"https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=\" +\n            String(prefCode),\n          {\n            headers: { \"X-API-KEY\": process.env.REACT_APP_API_KEY},\n          }\n        )\n        .then((results) => {\n          c_prefPopulation.push({\n            prefName: prefName,\n            data: results.data.result.data[0].data,\n          });\n\n          setPrefPopulation(c_prefPopulation);\n        })\n        .catch((error) => {\n          return;\n        });\n    }\n    // チェックを外した処理\n    else {\n      const deleteIndex = c_prefPopulation.findIndex(\n        (value) => value.prefName === prefName\n      );\n      if (deleteIndex === -1) return;\n      c_prefPopulation.splice(deleteIndex, 1);\n      setPrefPopulation(c_prefPopulation);\n    }\n  };\n\n  return (\n    <main>\n      <h2 style={Styles.label}>都道府県</h2>\n      {prefectures && (\n        <CheckField\n          prefectures={prefectures.result}\n          onChange={handleClickCheck}\n        />\n      )}\n      <h2 style={Styles.label}>人口推移グラフ</h2>\n      <Graph populationdata={prefPopulation} />\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}