{"ast":null,"code":"var _jsxFileName = \"/Users/niizakitakuma/Downloads/react-highcharts-resas-demo-main/src/components/CheckField.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = {\n  checkcardList: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    padding: \"10px\",\n    justifyContent: \"flex-start\",\n    justifySelf: \"auto\"\n  },\n  text: {\n    display: \"contents\",\n    marginLeft: \"1em\",\n    cursor: \"pointer\"\n  },\n  checkcard: {\n    borderRadius: \"24px\",\n    border: \"solid 2px\",\n    textAlign: \"center\",\n    padding: \"4px\",\n    margin: \"0.5rem\"\n  }\n};\n\n// 都道府県一覧のチェックボックスを表示するコンポーネント\nconst CheckField = _ref => {\n  let {\n    prefectures,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: Styles.checkcardList,\n      children: prefectures === null || prefectures === void 0 ? void 0 : prefectures.map(prefecture => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Styles.checkcard,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"Prefecture name\",\n          onChange: event => onChange(prefecture.prefName, prefecture.prefCode, event.target.checked),\n          id: \"checkbox\" + prefecture.prefCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: Styles.text,\n          htmlFor: \"checkbox\" + prefecture.prefCode,\n          children: prefecture.prefName.length === 3 ? \"　\" + prefecture.prefName : prefecture.prefName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, prefecture.prefName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CheckField;\nexport default CheckField;\nvar _c;\n$RefreshReg$(_c, \"CheckField\");","map":{"version":3,"names":["React","Styles","checkcardList","display","flexWrap","padding","justifyContent","justifySelf","text","marginLeft","cursor","checkcard","borderRadius","border","textAlign","margin","CheckField","prefectures","onChange","map","prefecture","event","prefName","prefCode","target","checked","length"],"sources":["/Users/niizakitakuma/Downloads/react-highcharts-resas-demo-main/src/components/CheckField.tsx"],"sourcesContent":["import React from \"react\";\n\ntype Props = {\n  prefectures:\n    | {\n        prefCode: number;\n        prefName: string;\n      }[];\n\n  onChange: (name: string, prefName: number, check: boolean) => void;\n};\n\nconst Styles: { [key: string]: React.CSSProperties } = {\n  checkcardList: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    padding: \"10px\",\n    justifyContent: \"flex-start\",\n    justifySelf: \"auto\",\n  },\n  text: { display: \"contents\", marginLeft: \"1em\", cursor: \"pointer\" },\n  checkcard: {\n    borderRadius: \"24px\",\n    border: \"solid 2px\",\n    textAlign: \"center\",\n    padding: \"4px\",\n    margin: \"0.5rem\",\n  },\n};\n\n// 都道府県一覧のチェックボックスを表示するコンポーネント\nconst CheckField: React.FC<Props> = ({ prefectures, onChange }) => {\n  return (\n    <>\n      <div style={Styles.checkcardList}>\n        {prefectures?.map((prefecture) => (\n          <div style={Styles.checkcard} key={prefecture.prefName}>\n            <input\n              type=\"checkbox\"\n              name=\"Prefecture name\"\n              onChange={(event) =>\n                onChange(\n                  prefecture.prefName,\n                  prefecture.prefCode,\n                  event.target.checked\n                )\n              }\n              id={\"checkbox\" + prefecture.prefCode}\n            />\n            <label\n              style={Styles.text}\n              htmlFor={\"checkbox\" + prefecture.prefCode}\n            >\n              {prefecture.prefName.length === 3\n                ? \"　\" + prefecture.prefName\n                : prefecture.prefName}\n            </label>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CheckField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAY1B,MAAMC,MAA8C,GAAG;EACrDC,aAAa,EAAE;IACbC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,MAAM;IAChBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,YAAY;IAC5BC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;IAAEL,OAAO,EAAE,UAAU;IAAEM,UAAU,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAU,CAAC;EACnEC,SAAS,EAAE;IACTC,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE,WAAW;IACnBC,SAAS,EAAE,QAAQ;IACnBT,OAAO,EAAE,KAAK;IACdU,MAAM,EAAE;EACV;AACF,CAAC;;AAED;AACA,MAAMC,UAA2B,GAAG,QAA+B;EAAA,IAA9B;IAAEC,WAAW;IAAEC;EAAS,CAAC;EAC5D,oBACE;IAAA,uBACE;MAAK,KAAK,EAAEjB,MAAM,CAACC,aAAc;MAAA,UAC9Be,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,GAAG,CAAEC,UAAU,iBAC3B;QAAK,KAAK,EAAEnB,MAAM,CAACU,SAAU;QAAA,wBAC3B;UACE,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,iBAAiB;UACtB,QAAQ,EAAGU,KAAK,IACdH,QAAQ,CACNE,UAAU,CAACE,QAAQ,EACnBF,UAAU,CAACG,QAAQ,EACnBF,KAAK,CAACG,MAAM,CAACC,OAAO,CAEvB;UACD,EAAE,EAAE,UAAU,GAAGL,UAAU,CAACG;QAAS;UAAA;UAAA;UAAA;QAAA,QACrC,eACF;UACE,KAAK,EAAEtB,MAAM,CAACO,IAAK;UACnB,OAAO,EAAE,UAAU,GAAGY,UAAU,CAACG,QAAS;UAAA,UAEzCH,UAAU,CAACE,QAAQ,CAACI,MAAM,KAAK,CAAC,GAC7B,GAAG,GAAGN,UAAU,CAACE,QAAQ,GACzBF,UAAU,CAACE;QAAQ;UAAA;UAAA;UAAA;QAAA,QACjB;MAAA,GApByBF,UAAU,CAACE,QAAQ;QAAA;QAAA;QAAA;MAAA,QAsBvD;IAAC;MAAA;MAAA;MAAA;IAAA;EACE,iBACL;AAEP,CAAC;AAAC,KA/BIN,UAA2B;AAiCjC,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}